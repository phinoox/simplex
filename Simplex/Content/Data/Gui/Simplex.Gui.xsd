<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="Simplex.Gui">
<xs:element name="Alignment" nillable="true" type="Alignment" />
<xs:simpleType name="Alignment">
<xs:restriction base="xs:string">
<xs:enumeration value="Left"/>
<xs:enumeration value="CenterH"/>
<xs:enumeration value="Right"/>
<xs:enumeration value="Top"/>
<xs:enumeration value="CenterV"/>
<xs:enumeration value="Center"/>
<xs:enumeration value="Bottom"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="HorizontalAlignment" nillable="true" type="HorizontalAlignment" />
<xs:simpleType name="HorizontalAlignment">
<xs:restriction base="xs:string">
<xs:enumeration value="Left"/>
<xs:enumeration value="Center"/>
<xs:enumeration value="Right"/>
<xs:enumeration value="Stretch"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="VerticalAlignment" nillable="true" type="VerticalAlignment" />
<xs:simpleType name="VerticalAlignment">
<xs:restriction base="xs:string">
<xs:enumeration value="Top"/>
<xs:enumeration value="Center"/>
<xs:enumeration value="Bottom"/>
<xs:enumeration value="Stretch"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="Anchor" nillable="true" type="Anchor" />
<xs:complexType name="Anchor">
</xs:complexType>

<xs:element name="BoundingBox2D" nillable="true" type="BoundingBox2D" />
<xs:complexType name="BoundingBox2D">
</xs:complexType>

<xs:element name="Color" nillable="true" type="Color" />
<xs:complexType name="Color">
<xs:element name="R" type="xs:Byte"/>
<xs:element name="G" type="xs:Byte"/>
<xs:element name="B" type="xs:Byte"/>
<xs:element name="A" type="xs:Byte"/>
</xs:complexType>

<xs:element name="Cursor" nillable="true" type="Cursor" />
<xs:simpleType name="Cursor">
<xs:restriction base="xs:string">
<xs:enumeration value="Normal"/>
<xs:enumeration value="Beam"/>
<xs:enumeration value="SizeNS"/>
<xs:enumeration value="SizeWE"/>
<xs:enumeration value="SizeNWSE"/>
<xs:enumeration value="SizeNESW"/>
<xs:enumeration value="SizeAll"/>
<xs:enumeration value="No"/>
<xs:enumeration value="Wait"/>
<xs:enumeration value="Finger"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="Dock" nillable="true" type="Dock" />
<xs:simpleType name="Dock">
<xs:restriction base="xs:string">
<xs:enumeration value="None"/>
<xs:enumeration value="Left"/>
<xs:enumeration value="Top"/>
<xs:enumeration value="Right"/>
<xs:enumeration value="Bottom"/>
<xs:enumeration value="Fill"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="HorizontalAlign" nillable="true" type="HorizontalAlign" />
<xs:simpleType name="HorizontalAlign">
<xs:restriction base="xs:string">
<xs:enumeration value="Left"/>
<xs:enumeration value="Center"/>
<xs:enumeration value="Right"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="TextAlign" nillable="true" type="TextAlign" />
<xs:simpleType name="TextAlign">
<xs:restriction base="xs:string">
<xs:enumeration value="Left"/>
<xs:enumeration value="Center"/>
<xs:enumeration value="Right"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="VerticalAlign" nillable="true" type="VerticalAlign" />
<xs:simpleType name="VerticalAlign">
<xs:restriction base="xs:string">
<xs:enumeration value="Top"/>
<xs:enumeration value="Center"/>
<xs:enumeration value="Bottom"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="FontStyle" nillable="true" type="FontStyle" />
<xs:simpleType name="FontStyle">
<xs:restriction base="xs:string">
<xs:enumeration value="Normal"/>
<xs:enumeration value="Bold"/>
<xs:enumeration value="Italic"/>
<xs:enumeration value="Underline"/>
<xs:enumeration value="Strikeout"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="Font" nillable="true" type="Font" />
<xs:complexType name="Font">
<xs:element name="FaceName" type="xs:String"/>
<xs:element name="Size" type="xs:Int32"/>
<xs:element name="Smooth" type="xs:Boolean"/>
<xs:element name="Bold" type="xs:Boolean"/>
<xs:element name="Italic" type="xs:Boolean"/>
<xs:element name="Underline" type="xs:Boolean"/>
<xs:element name="Strikeout" type="xs:Boolean"/>
<xs:element name="RendererData" type="xs:Object"/>
<xs:element name="RealSize" type="xs:Single"/>
<xs:element name="FontMetrics" type="xs:FontMetrics"/>
</xs:complexType>

<xs:element name="FontCache" nillable="true" type="FontCache" />
<xs:complexType name="FontCache">
</xs:complexType>

<xs:element name="FontMetrics" nillable="true" type="FontMetrics" />
<xs:complexType name="FontMetrics">
<xs:element name="EmHeightPixels" type="xs:Single"/>
<xs:element name="AscentPixels" type="xs:Single"/>
<xs:element name="DescentPixels" type="xs:Single"/>
<xs:element name="CellHeightPixels" type="xs:Single"/>
<xs:element name="InternalLeadingPixels" type="xs:Single"/>
<xs:element name="LineSpacingPixels" type="xs:Single"/>
<xs:element name="ExternalLeadingPixels" type="xs:Single"/>
<xs:element name="Top" type="xs:Single"/>
<xs:element name="Baseline" type="xs:Single"/>
<xs:element name="Bottom" type="xs:Single"/>
</xs:complexType>

<xs:element name="HSV" nillable="true" type="HSV" />
<xs:complexType name="HSV">
</xs:complexType>

<xs:element name="Key" nillable="true" type="Key" />
<xs:simpleType name="Key">
<xs:restriction base="xs:string">
<xs:enumeration value="Invalid"/>
<xs:enumeration value="Return"/>
<xs:enumeration value="Backspace"/>
<xs:enumeration value="Delete"/>
<xs:enumeration value="Left"/>
<xs:enumeration value="Right"/>
<xs:enumeration value="Shift"/>
<xs:enumeration value="Tab"/>
<xs:enumeration value="Space"/>
<xs:enumeration value="Home"/>
<xs:enumeration value="End"/>
<xs:enumeration value="Control"/>
<xs:enumeration value="Up"/>
<xs:enumeration value="Down"/>
<xs:enumeration value="Escape"/>
<xs:enumeration value="Alt"/>
<xs:enumeration value="Count"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="Margin" nillable="true" type="Margin" />
<xs:complexType name="Margin">
</xs:complexType>

<xs:element name="Padding" nillable="true" type="Padding" />
<xs:complexType name="Padding">
</xs:complexType>

<xs:element name="Texture" nillable="true" type="Texture" />
<xs:complexType name="Texture">
<xs:element name="Name" type="xs:String"/>
<xs:element name="RendererData" type="xs:Object"/>
<xs:element name="Failed" type="xs:Boolean"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
</xs:complexType>

<xs:element name="ElapsedEventHandler" nillable="true" type="ElapsedEventHandler" />
<xs:complexType name="ElapsedEventHandler">
<xs:element name="Target" type="xs:Object"/>
<xs:element name="Method" type="xs:MethodInfo"/>
</xs:complexType>

<xs:element name="Timer" nillable="true" type="Timer" />
<xs:complexType name="Timer">
<xs:element name="Interval" type="xs:Int32"/>
<xs:element name="IsOneTime" type="xs:Boolean"/>
<xs:element name="IsEnabled" type="xs:Boolean"/>
</xs:complexType>

<xs:element name="ToolTip" nillable="true" type="ToolTip" />
<xs:complexType name="ToolTip">
</xs:complexType>

<xs:element name="Util" nillable="true" type="Util" />
<xs:complexType name="Util">
</xs:complexType>

<xs:element name="Point" nillable="true" type="Point" />
<xs:complexType name="Point">
<xs:element name="X" type="xs:Int32"/>
<xs:element name="Y" type="xs:Int32"/>
</xs:complexType>

<xs:element name="Rectangle" nillable="true" type="Rectangle" />
<xs:complexType name="Rectangle">
<xs:element name="X" type="xs:Int32"/>
<xs:element name="Y" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Right" type="xs:Int32"/>
<xs:element name="Bottom" type="xs:Int32"/>
<xs:element name="Location" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
</xs:complexType>

<xs:element name="Size" nillable="true" type="Size" />
<xs:complexType name="Size">
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
</xs:complexType>

<xs:element name="XmlPropertyAttribute" nillable="true" type="XmlPropertyAttribute" />
<xs:complexType name="XmlPropertyAttribute">
<xs:element name="TypeId" type="xs:Object"/>
</xs:complexType>

<xs:element name="XmlEventAttribute" nillable="true" type="XmlEventAttribute" />
<xs:complexType name="XmlEventAttribute">
<xs:element name="TypeId" type="xs:Object"/>
</xs:complexType>

<xs:element name="XmlControlAttribute" nillable="true" type="XmlControlAttribute" />
<xs:complexType name="XmlControlAttribute">
<xs:element name="ElementName" type="xs:String"/>
<xs:element name="CustomHandler" type="xs:String"/>
<xs:element name="TypeId" type="xs:Object"/>
</xs:complexType>

<xs:element name="Component" nillable="true" type="Component" />
<xs:complexType name="Component">
<xs:element name="View" type="xs:ControlBase"/>
</xs:complexType>

<xs:element name="XmlEventHandler`1" nillable="true" type="XmlEventHandler`1" />
<xs:complexType name="XmlEventHandler`1">
</xs:complexType>

<xs:element name="ElementHandler" nillable="true" type="ElementHandler" />
<xs:complexType name="ElementHandler">
<xs:element name="Target" type="xs:Object"/>
<xs:element name="Method" type="xs:MethodInfo"/>
</xs:complexType>

<xs:element name="AttributeValueConverter" nillable="true" type="AttributeValueConverter" />
<xs:complexType name="AttributeValueConverter">
<xs:element name="Target" type="xs:Object"/>
<xs:element name="Method" type="xs:MethodInfo"/>
</xs:complexType>

<xs:element name="EventHandlerConverter" nillable="true" type="EventHandlerConverter" />
<xs:complexType name="EventHandlerConverter">
<xs:element name="Target" type="xs:Object"/>
<xs:element name="Method" type="xs:MethodInfo"/>
</xs:complexType>

<xs:element name="Parser" nillable="true" type="Parser" />
<xs:complexType name="Parser">
<xs:element name="Name" type="xs:String"/>
</xs:complexType>

<xs:element name="XmlHelper" nillable="true" type="XmlHelper" />
<xs:complexType name="XmlHelper">
</xs:complexType>


<xs:element name="XmlStringSource" nillable="true" type="XmlStringSource" />
<xs:complexType name="XmlStringSource">
</xs:complexType>

<xs:element name="XmlFileSource" nillable="true" type="XmlFileSource" />
<xs:complexType name="XmlFileSource">
</xs:complexType>

<xs:element name="SkinBase" nillable="true" type="SkinBase" />
<xs:complexType name="SkinBase">
<xs:element name="DefaultFont" type="xs:Font"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Renderer" type="xs:RendererBase"/>
</xs:complexType>

<xs:element name="SkinColors" nillable="true" type="SkinColors" />
<xs:complexType name="SkinColors">
</xs:complexType>

<xs:element name="SkinTextures" nillable="true" type="SkinTextures" />
<xs:complexType name="SkinTextures">
</xs:complexType>

<xs:element name="TexturedBase" nillable="true" type="TexturedBase" />
<xs:complexType name="TexturedBase">
<xs:element name="DefaultFont" type="xs:Font"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Renderer" type="xs:RendererBase"/>
</xs:complexType>

<xs:element name="SubRect" nillable="true" type="SubRect" />
<xs:complexType name="SubRect">
</xs:complexType>

<xs:element name="Bordered" nillable="true" type="Bordered" />
<xs:complexType name="Bordered">
</xs:complexType>

<xs:element name="Single" nillable="true" type="Single" />
<xs:complexType name="Single">
</xs:complexType>

<xs:element name="Document" nillable="true" type="Document" />
<xs:complexType name="Document">
<xs:element name="Paragraphs" type="xs:List`1"/>
</xs:complexType>

<xs:element name="FontPart" nillable="true" type="FontPart" />
<xs:complexType name="FontPart">
</xs:complexType>

<xs:element name="ImageParagraph" nillable="true" type="ImageParagraph" />
<xs:complexType name="ImageParagraph">
<xs:element name="ImageName" type="xs:String"/>
<xs:element name="ImageSize" type="xs:Nullable`1"/>
<xs:element name="TextureRect" type="xs:Nullable`1"/>
<xs:element name="ImageColor" type="xs:Nullable`1"/>
<xs:element name="Parts" type="xs:List`1"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="FirstIndent" type="xs:Int32"/>
<xs:element name="RemainigIndent" type="xs:Int32"/>
</xs:complexType>

<xs:element name="LineBreaker" nillable="true" type="LineBreaker" />
<xs:complexType name="LineBreaker">
<xs:element name="Renderer" type="xs:RendererBase"/>
<xs:element name="DefaultFont" type="xs:Font"/>
</xs:complexType>

<xs:element name="LineBreakPart" nillable="true" type="LineBreakPart" />
<xs:complexType name="LineBreakPart">
</xs:complexType>

<xs:element name="LinkPart" nillable="true" type="LinkPart" />
<xs:complexType name="LinkPart">
<xs:element name="Link" type="xs:String"/>
<xs:element name="HoverColor" type="xs:Nullable`1"/>
<xs:element name="HoverFont" type="xs:Font"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="Color" type="xs:Nullable`1"/>
<xs:element name="Font" type="xs:Font"/>
</xs:complexType>

<xs:element name="Paragraph" nillable="true" type="Paragraph" />
<xs:complexType name="Paragraph">
<xs:element name="Parts" type="xs:List`1"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="FirstIndent" type="xs:Int32"/>
<xs:element name="RemainigIndent" type="xs:Int32"/>
</xs:complexType>

<xs:element name="Part" nillable="true" type="Part" />
<xs:complexType name="Part">
</xs:complexType>

<xs:element name="TextBlock" nillable="true" type="TextBlock" />
<xs:complexType name="TextBlock">
</xs:complexType>

<xs:element name="TextPart" nillable="true" type="TextPart" />
<xs:complexType name="TextPart">
<xs:element name="Text" type="xs:String"/>
<xs:element name="Color" type="xs:Nullable`1"/>
<xs:element name="Font" type="xs:Font"/>
</xs:complexType>

<xs:element name="LineBreaker" nillable="true" type="LineBreaker" />
<xs:complexType name="LineBreaker">
<xs:element name="Renderer" type="xs:RendererBase"/>
<xs:element name="DefaultFont" type="xs:Font"/>
</xs:complexType>

<xs:element name="Formatter" nillable="true" type="Formatter" />
<xs:complexType name="Formatter">
</xs:complexType>

<xs:element name="LeftFormatter" nillable="true" type="LeftFormatter" />
<xs:complexType name="LeftFormatter">
</xs:complexType>

<xs:element name="LineBreaker" nillable="true" type="LineBreaker" />
<xs:complexType name="LineBreaker">
<xs:element name="Renderer" type="xs:RendererBase"/>
<xs:element name="DefaultFont" type="xs:Font"/>
</xs:complexType>

<xs:element name="NodeType" nillable="true" type="NodeType" />
<xs:simpleType name="NodeType">
<xs:restriction base="xs:string">
<xs:enumeration value="Box"/>
<xs:enumeration value="Glue"/>
<xs:enumeration value="Penalty"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="Node" nillable="true" type="Node" />
<xs:complexType name="Node">
<xs:element name="Type" type="xs:NodeType"/>
<xs:element name="Width" type="xs:Int32"/>
</xs:complexType>

<xs:element name="BoxNode" nillable="true" type="BoxNode" />
<xs:complexType name="BoxNode">
<xs:element name="Value" type="xs:String"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Part" type="xs:Part"/>
<xs:element name="Type" type="xs:NodeType"/>
<xs:element name="Width" type="xs:Int32"/>
</xs:complexType>

<xs:element name="GlueNode" nillable="true" type="GlueNode" />
<xs:complexType name="GlueNode">
<xs:element name="Stretch" type="xs:Int32"/>
<xs:element name="Shrink" type="xs:Int32"/>
<xs:element name="Type" type="xs:NodeType"/>
<xs:element name="Width" type="xs:Int32"/>
</xs:complexType>

<xs:element name="PenaltyNode" nillable="true" type="PenaltyNode" />
<xs:complexType name="PenaltyNode">
<xs:element name="Penalty" type="xs:Int32"/>
<xs:element name="Flagged" type="xs:Int32"/>
<xs:element name="Type" type="xs:NodeType"/>
<xs:element name="Width" type="xs:Int32"/>
</xs:complexType>

<xs:element name="InputHandler" nillable="true" type="InputHandler" />
<xs:complexType name="InputHandler">
</xs:complexType>

<xs:element name="InputSystem" nillable="true" type="InputSystem" />
<xs:complexType name="InputSystem">
</xs:complexType>

<xs:element name="KeyData" nillable="true" type="KeyData" />
<xs:complexType name="KeyData">
</xs:complexType>

<xs:element name="OpenTK" nillable="true" type="OpenTK" />
<xs:complexType name="OpenTK">
</xs:complexType>

<xs:element name="GuiRenderer" nillable="true" type="GuiRenderer" />
<xs:complexType name="GuiRenderer">
</xs:complexType>

<xs:element name="GuiShader" nillable="true" type="GuiShader" />
<xs:complexType name="GuiShader">
<xs:element name="Program" type="xs:Int32"/>
<xs:element name="VertexShader" type="xs:Int32"/>
<xs:element name="FragmentShader" type="xs:Int32"/>
<xs:element name="Uniforms" type="xs:UniformDictionary"/>
</xs:complexType>


<xs:element name="ImageLoader" nillable="true" type="ImageLoader" />
<xs:complexType name="ImageLoader">
</xs:complexType>

<xs:element name="OpenTKBase" nillable="true" type="OpenTKBase" />
<xs:complexType name="OpenTKBase">
<xs:element name="TextCacheSize" type="xs:Int32"/>
<xs:element name="DrawCallCount" type="xs:Int32"/>
<xs:element name="VertexCount" type="xs:Int32"/>
<xs:element name="GLVersion" type="xs:Int32"/>
<xs:element name="DrawColor" type="xs:Color"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="RenderOffset" type="xs:Point"/>
<xs:element name="ClipRegion" type="xs:Rectangle"/>
<xs:element name="ClipRegionVisible" type="xs:Boolean"/>
<xs:element name="CTT" type="xs:"/>
</xs:complexType>

<xs:element name="OpenTKGL40" nillable="true" type="OpenTKGL40" />
<xs:complexType name="OpenTKGL40">
<xs:element name="VertexCount" type="xs:Int32"/>
<xs:element name="TextCacheSize" type="xs:Int32"/>
<xs:element name="DrawCallCount" type="xs:Int32"/>
<xs:element name="GLVersion" type="xs:Int32"/>
<xs:element name="DrawColor" type="xs:Color"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="RenderOffset" type="xs:Point"/>
<xs:element name="ClipRegion" type="xs:Rectangle"/>
<xs:element name="ClipRegionVisible" type="xs:Boolean"/>
<xs:element name="CTT" type="xs:"/>
</xs:complexType>

<xs:element name="RendererBase" nillable="true" type="RendererBase" />
<xs:complexType name="RendererBase">
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="DrawColor" type="xs:Color"/>
<xs:element name="RenderOffset" type="xs:Point"/>
<xs:element name="ClipRegion" type="xs:Rectangle"/>
<xs:element name="ClipRegionVisible" type="xs:Boolean"/>
<xs:element name="CTT" type="xs:"/>
</xs:complexType>

<xs:element name="TextRenderer" nillable="true" type="TextRenderer" />
<xs:complexType name="TextRenderer">
<xs:element name="Texture" type="xs:Texture"/>
</xs:complexType>

<xs:element name="DragAndDrop" nillable="true" type="DragAndDrop" />
<xs:complexType name="DragAndDrop">
</xs:complexType>

<xs:element name="Package" nillable="true" type="Package" />
<xs:complexType name="Package">
</xs:complexType>

<xs:element name="BorderType" nillable="true" type="BorderType" />
<xs:simpleType name="BorderType">
<xs:restriction base="xs:string">
<xs:enumeration value="ToolTip"/>
<xs:enumeration value="StatusBar"/>
<xs:enumeration value="MenuStrip"/>
<xs:enumeration value="Selection"/>
<xs:enumeration value="PanelNormal"/>
<xs:enumeration value="PanelBright"/>
<xs:enumeration value="PanelDark"/>
<xs:enumeration value="PanelHighlight"/>
<xs:enumeration value="ListBox"/>
<xs:enumeration value="TreeControl"/>
<xs:enumeration value="CategoryList"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="Border" nillable="true" type="Border" />
<xs:complexType name="Border">
<xs:element name="BorderType" type="xs:BorderType"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ImageAlign" nillable="true" type="ImageAlign" />
<xs:simpleType name="ImageAlign">
<xs:restriction base="xs:string">
<xs:enumeration value="Left"/>
<xs:enumeration value="Right"/>
<xs:enumeration value="Top"/>
<xs:enumeration value="Bottom"/>
<xs:enumeration value="CenterV"/>
<xs:enumeration value="CenterH"/>
<xs:enumeration value="Center"/>
<xs:enumeration value="Fill"/>
<xs:enumeration value="LeftSide"/>
<xs:enumeration value="Above"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="Button" nillable="true" type="Button" />
<xs:complexType name="Button">
<xs:element name="Text" type="xs:String"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="TextColorOverride" type="xs:Color"/>
<xs:element name="TextPadding" type="xs:Padding"/>
<xs:element name="Alignment" type="xs:Alignment"/>
<xs:element name="ImageAlign" type="xs:ImageAlign"/>
<xs:element name="ImageName" type="xs:String"/>
<xs:element name="ImageSize" type="xs:Size"/>
<xs:element name="ImageTextureRect" type="xs:Rectangle"/>
<xs:element name="ImageColor" type="xs:Color"/>
<xs:element name="IsDepressed" type="xs:Boolean"/>
<xs:element name="IsToggle" type="xs:Boolean"/>
<xs:element name="ToggleState" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="Canvas" nillable="true" type="Canvas" />
<xs:complexType name="Canvas">
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BackgroundColor" type="xs:Color"/>
<xs:element name="NeedsRedraw" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="CheckBox" nillable="true" type="CheckBox" />
<xs:complexType name="CheckBox">
<xs:element name="IsChecked" type="xs:Boolean"/>
<xs:element name="IsDepressed" type="xs:Boolean"/>
<xs:element name="IsToggle" type="xs:Boolean"/>
<xs:element name="ToggleState" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="CollapsibleCategory" nillable="true" type="CollapsibleCategory" />
<xs:complexType name="CollapsibleCategory">
<xs:element name="Text" type="xs:String"/>
<xs:element name="IsCategoryCollapsed" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="CollapsibleList" nillable="true" type="CollapsibleList" />
<xs:complexType name="CollapsibleList">
<xs:element name="VerticalScroll" type="xs:Int32"/>
<xs:element name="HorizontalScroll" type="xs:Int32"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="CanScrollH" type="xs:Boolean"/>
<xs:element name="CanScrollV" type="xs:Boolean"/>
<xs:element name="AutoSizeToContent" type="xs:Boolean"/>
<xs:element name="AutoHideBars" type="xs:Boolean"/>
<xs:element name="ViewableContentSize" type="xs:Size"/>
<xs:element name="ContentSize" type="xs:Size"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ColorLerpBox" nillable="true" type="ColorLerpBox" />
<xs:complexType name="ColorLerpBox">
<xs:element name="SelectedColor" type="xs:Color"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ColorPicker" nillable="true" type="ColorPicker" />
<xs:complexType name="ColorPicker">
<xs:element name="SelectedColor" type="xs:Color"/>
<xs:element name="R" type="xs:Int32"/>
<xs:element name="G" type="xs:Int32"/>
<xs:element name="B" type="xs:Int32"/>
<xs:element name="A" type="xs:Int32"/>
<xs:element name="AlphaVisible" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ColorSlider" nillable="true" type="ColorSlider" />
<xs:complexType name="ColorSlider">
<xs:element name="SelectedColor" type="xs:Color"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ComboBox" nillable="true" type="ComboBox" />
<xs:complexType name="ComboBox">
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="SelectedIndex" type="xs:Int32"/>
<xs:element name="SelectedItem" type="xs:MenuItem"/>
<xs:element name="IsOpen" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ControlBase" nillable="true" type="ControlBase" />
<xs:complexType name="ControlBase">
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="CrossSplitter" nillable="true" type="CrossSplitter" />
<xs:complexType name="CrossSplitter">
<xs:element name="IsZoomed" type="xs:Boolean"/>
<xs:element name="SplittersVisible" type="xs:Boolean"/>
<xs:element name="SplitterSize" type="xs:Int32"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="DockBase" nillable="true" type="DockBase" />
<xs:complexType name="DockBase">
<xs:element name="LeftDock" type="xs:DockBase"/>
<xs:element name="RightDock" type="xs:DockBase"/>
<xs:element name="TopDock" type="xs:DockBase"/>
<xs:element name="BottomDock" type="xs:DockBase"/>
<xs:element name="TabControl" type="xs:TabControl"/>
<xs:element name="IsEmpty" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="DockedTabControl" nillable="true" type="DockedTabControl" />
<xs:complexType name="DockedTabControl">
<xs:element name="TitleBarVisible" type="xs:Boolean"/>
<xs:element name="AllowReorder" type="xs:Boolean"/>
<xs:element name="CurrentButton" type="xs:TabButton"/>
<xs:element name="TabStripPosition" type="xs:Dock"/>
<xs:element name="TabStrip" type="xs:TabStrip"/>
<xs:element name="TabCount" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="EditableComboBox" nillable="true" type="EditableComboBox" />
<xs:complexType name="EditableComboBox">
<xs:element name="Text" type="xs:String"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="SelectedIndex" type="xs:Int32"/>
<xs:element name="SelectedItem" type="xs:MenuItem"/>
<xs:element name="IsOpen" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="EnumRadioButtonGroup`1" nillable="true" type="EnumRadioButtonGroup`1" />
<xs:complexType name="EnumRadioButtonGroup`1">
<xs:element name="SelectedValue" type="xs:T"/>
<xs:element name="Selected" type="xs:LabeledRadioButton"/>
<xs:element name="SelectedName" type="xs:String"/>
<xs:element name="SelectedLabel" type="xs:String"/>
<xs:element name="SelectedIndex" type="xs:Int32"/>
<xs:element name="Horizontal" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ClickedEventArgs" nillable="true" type="ClickedEventArgs" />
<xs:complexType name="ClickedEventArgs">
<xs:element name="X" type="xs:Int32"/>
<xs:element name="Y" type="xs:Int32"/>
<xs:element name="MouseDown" type="xs:Boolean"/>
</xs:complexType>

<xs:element name="ItemSelectedEventArgs" nillable="true" type="ItemSelectedEventArgs" />
<xs:complexType name="ItemSelectedEventArgs">
<xs:element name="SelectedItem" type="xs:ControlBase"/>
</xs:complexType>

<xs:element name="GroupBox" nillable="true" type="GroupBox" />
<xs:complexType name="GroupBox">
<xs:element name="Text" type="xs:String"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="HorizontalScrollBar" nillable="true" type="HorizontalScrollBar" />
<xs:complexType name="HorizontalScrollBar">
<xs:element name="BarSize" type="xs:Int32"/>
<xs:element name="BarPos" type="xs:Int32"/>
<xs:element name="IsHorizontal" type="xs:Boolean"/>
<xs:element name="ButtonSize" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="NudgeAmount" type="xs:Single"/>
<xs:element name="ScrollAmount" type="xs:Single"/>
<xs:element name="ContentSize" type="xs:Single"/>
<xs:element name="ViewableContentSize" type="xs:Single"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="HorizontalSlider" nillable="true" type="HorizontalSlider" />
<xs:complexType name="HorizontalSlider">
<xs:element name="NotchCount" type="xs:Int32"/>
<xs:element name="SnapToNotches" type="xs:Boolean"/>
<xs:element name="Min" type="xs:Single"/>
<xs:element name="Max" type="xs:Single"/>
<xs:element name="Value" type="xs:Single"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="HorizontalSplitter" nillable="true" type="HorizontalSplitter" />
<xs:complexType name="HorizontalSplitter">
<xs:element name="Value" type="xs:Single"/>
<xs:element name="IsZoomed" type="xs:Boolean"/>
<xs:element name="SplittersVisible" type="xs:Boolean"/>
<xs:element name="SplitterSize" type="xs:Int32"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="HSVColorPicker" nillable="true" type="HSVColorPicker" />
<xs:complexType name="HSVColorPicker">
<xs:element name="DefaultColor" type="xs:Color"/>
<xs:element name="SelectedColor" type="xs:Color"/>
<xs:element name="EnableDefaultColor" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>


<xs:element name="ImagePanel" nillable="true" type="ImagePanel" />
<xs:complexType name="ImagePanel">
<xs:element name="ImageName" type="xs:String"/>
<xs:element name="ImageSize" type="xs:Size"/>
<xs:element name="TextureRect" type="xs:Rectangle"/>
<xs:element name="ImageColor" type="xs:Color"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="StartPosition" nillable="true" type="StartPosition" />
<xs:simpleType name="StartPosition">
<xs:restriction base="xs:string">
<xs:enumeration value="CenterParent"/>
<xs:enumeration value="CenterCanvas"/>
<xs:enumeration value="Manual"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="Label" nillable="true" type="Label" />
<xs:complexType name="Label">
<xs:element name="Alignment" type="xs:Alignment"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="TextColorOverride" type="xs:Color"/>
<xs:element name="TextOverride" type="xs:String"/>
<xs:element name="AutoSizeToContents" type="xs:Boolean"/>
<xs:element name="TextPadding" type="xs:Padding"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="LabeledCheckBox" nillable="true" type="LabeledCheckBox" />
<xs:complexType name="LabeledCheckBox">
<xs:element name="IsChecked" type="xs:Boolean"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="LabeledRadioButton" nillable="true" type="LabeledRadioButton" />
<xs:complexType name="LabeledRadioButton">
<xs:element name="Text" type="xs:String"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="LinkClickedEventArgs" nillable="true" type="LinkClickedEventArgs" />
<xs:complexType name="LinkClickedEventArgs">
<xs:element name="Link" type="xs:String"/>
</xs:complexType>

<xs:element name="LinkLabel" nillable="true" type="LinkLabel" />
<xs:complexType name="LinkLabel">
<xs:element name="Link" type="xs:String"/>
<xs:element name="HoverColor" type="xs:Color"/>
<xs:element name="HoverFont" type="xs:Font"/>
<xs:element name="Alignment" type="xs:Alignment"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="TextColorOverride" type="xs:Color"/>
<xs:element name="TextOverride" type="xs:String"/>
<xs:element name="AutoSizeToContents" type="xs:Boolean"/>
<xs:element name="TextPadding" type="xs:Padding"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ListBox" nillable="true" type="ListBox" />
<xs:complexType name="ListBox">
<xs:element name="AllowMultiSelect" type="xs:Boolean"/>
<xs:element name="AlternateColor" type="xs:Boolean"/>
<xs:element name="IsToggle" type="xs:Boolean"/>
<xs:element name="RowCount" type="xs:Int32"/>
<xs:element name="Item" type="xs:ListBoxRow"/>
<xs:element name="SelectedRows" type="xs:"/>
<xs:element name="SelectedRow" type="xs:ListBoxRow"/>
<xs:element name="SelectedRowIndex" type="xs:Int32"/>
<xs:element name="ColumnCount" type="xs:Int32"/>
<xs:element name="VerticalScroll" type="xs:Int32"/>
<xs:element name="HorizontalScroll" type="xs:Int32"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="CanScrollH" type="xs:Boolean"/>
<xs:element name="CanScrollV" type="xs:Boolean"/>
<xs:element name="AutoSizeToContent" type="xs:Boolean"/>
<xs:element name="AutoHideBars" type="xs:Boolean"/>
<xs:element name="ViewableContentSize" type="xs:Size"/>
<xs:element name="ContentSize" type="xs:Size"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ListBoxRow" nillable="true" type="ListBoxRow" />
<xs:complexType name="ListBoxRow">
<xs:element name="ListBox" type="xs:ListBox"/>
<xs:element name="IsSelected" type="xs:Boolean"/>
<xs:element name="ColumnCount" type="xs:Int32"/>
<xs:element name="EvenRow" type="xs:Boolean"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="Menu" nillable="true" type="Menu" />
<xs:complexType name="Menu">
<xs:element name="ParentMenuItem" type="xs:MenuItem"/>
<xs:element name="IconMarginDisabled" type="xs:Boolean"/>
<xs:element name="DeleteOnClose" type="xs:Boolean"/>
<xs:element name="VerticalScroll" type="xs:Int32"/>
<xs:element name="HorizontalScroll" type="xs:Int32"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="CanScrollH" type="xs:Boolean"/>
<xs:element name="CanScrollV" type="xs:Boolean"/>
<xs:element name="AutoSizeToContent" type="xs:Boolean"/>
<xs:element name="AutoHideBars" type="xs:Boolean"/>
<xs:element name="ViewableContentSize" type="xs:Size"/>
<xs:element name="ContentSize" type="xs:Size"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="MenuItem" nillable="true" type="MenuItem" />
<xs:complexType name="MenuItem">
<xs:element name="IsOnStrip" type="xs:Boolean"/>
<xs:element name="IsCheckable" type="xs:Boolean"/>
<xs:element name="IsMenuOpen" type="xs:Boolean"/>
<xs:element name="IsChecked" type="xs:Boolean"/>
<xs:element name="Menu" type="xs:Menu"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="TextColorOverride" type="xs:Color"/>
<xs:element name="TextPadding" type="xs:Padding"/>
<xs:element name="Alignment" type="xs:Alignment"/>
<xs:element name="ImageAlign" type="xs:ImageAlign"/>
<xs:element name="ImageName" type="xs:String"/>
<xs:element name="ImageSize" type="xs:Size"/>
<xs:element name="ImageTextureRect" type="xs:Rectangle"/>
<xs:element name="ImageColor" type="xs:Color"/>
<xs:element name="IsDepressed" type="xs:Boolean"/>
<xs:element name="IsToggle" type="xs:Boolean"/>
<xs:element name="ToggleState" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="MenuStrip" nillable="true" type="MenuStrip" />
<xs:complexType name="MenuStrip">
<xs:element name="ParentMenuItem" type="xs:MenuItem"/>
<xs:element name="IconMarginDisabled" type="xs:Boolean"/>
<xs:element name="DeleteOnClose" type="xs:Boolean"/>
<xs:element name="VerticalScroll" type="xs:Int32"/>
<xs:element name="HorizontalScroll" type="xs:Int32"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="CanScrollH" type="xs:Boolean"/>
<xs:element name="CanScrollV" type="xs:Boolean"/>
<xs:element name="AutoSizeToContent" type="xs:Boolean"/>
<xs:element name="AutoHideBars" type="xs:Boolean"/>
<xs:element name="ViewableContentSize" type="xs:Size"/>
<xs:element name="ContentSize" type="xs:Size"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="MessageBoxButtons" nillable="true" type="MessageBoxButtons" />
<xs:simpleType name="MessageBoxButtons">
<xs:restriction base="xs:string">
<xs:enumeration value="AbortRetryIgnore"/>
<xs:enumeration value="OK"/>
<xs:enumeration value="OKCancel"/>
<xs:enumeration value="RetryCancel"/>
<xs:enumeration value="YesNo"/>
<xs:enumeration value="YesNoCancel"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="MessageBoxResult" nillable="true" type="MessageBoxResult" />
<xs:simpleType name="MessageBoxResult">
<xs:restriction base="xs:string">
<xs:enumeration value="Abort"/>
<xs:enumeration value="Retry"/>
<xs:enumeration value="Ignore"/>
<xs:enumeration value="Ok"/>
<xs:enumeration value="Cancel"/>
<xs:enumeration value="Yes"/>
<xs:enumeration value="No"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="MessageBoxResultEventArgs" nillable="true" type="MessageBoxResultEventArgs" />
<xs:complexType name="MessageBoxResultEventArgs">
<xs:element name="Result" type="xs:MessageBoxResult"/>
</xs:complexType>

<xs:element name="MessageBox" nillable="true" type="MessageBox" />
<xs:complexType name="MessageBox">
<xs:element name="Title" type="xs:String"/>
<xs:element name="IsClosable" type="xs:Boolean"/>
<xs:element name="ModalBackground" type="xs:Color"/>
<xs:element name="Modal" type="xs:Boolean"/>
<xs:element name="IsDraggingEnabled" type="xs:Boolean"/>
<xs:element name="DeleteOnClose" type="xs:Boolean"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="StartPosition" type="xs:StartPosition"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Resizing" type="xs:Resizing"/>
<xs:element name="ClampMovement" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="MultilineTextBox" nillable="true" type="MultilineTextBox" />
<xs:complexType name="MultilineTextBox">
<xs:element name="HasSelection" type="xs:Boolean"/>
<xs:element name="CursorPosition" type="xs:Point"/>
<xs:element name="CursorEnd" type="xs:Point"/>
<xs:element name="AcceptTabs" type="xs:Boolean"/>
<xs:element name="TotalLines" type="xs:Int32"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="VerticalScroll" type="xs:Int32"/>
<xs:element name="HorizontalScroll" type="xs:Int32"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="CanScrollH" type="xs:Boolean"/>
<xs:element name="CanScrollV" type="xs:Boolean"/>
<xs:element name="AutoSizeToContent" type="xs:Boolean"/>
<xs:element name="AutoHideBars" type="xs:Boolean"/>
<xs:element name="ViewableContentSize" type="xs:Size"/>
<xs:element name="ContentSize" type="xs:Size"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="NumericUpDown" nillable="true" type="NumericUpDown" />
<xs:complexType name="NumericUpDown">
<xs:element name="Min" type="xs:Single"/>
<xs:element name="Max" type="xs:Single"/>
<xs:element name="Step" type="xs:Single"/>
<xs:element name="Value" type="xs:Single"/>
<xs:element name="SelectAllOnFocus" type="xs:Boolean"/>
<xs:element name="HasSelection" type="xs:Boolean"/>
<xs:element name="CursorPos" type="xs:Int32"/>
<xs:element name="CursorEnd" type="xs:Int32"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="TextColorOverride" type="xs:Color"/>
<xs:element name="TextOverride" type="xs:String"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="FitToText" type="xs:String"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="Popup" nillable="true" type="Popup" />
<xs:complexType name="Popup">
<xs:element name="DeleteOnClose" type="xs:Boolean"/>
<xs:element name="VerticalScroll" type="xs:Int32"/>
<xs:element name="HorizontalScroll" type="xs:Int32"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="CanScrollH" type="xs:Boolean"/>
<xs:element name="CanScrollV" type="xs:Boolean"/>
<xs:element name="AutoSizeToContent" type="xs:Boolean"/>
<xs:element name="AutoHideBars" type="xs:Boolean"/>
<xs:element name="ViewableContentSize" type="xs:Size"/>
<xs:element name="ContentSize" type="xs:Size"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ProgressBar" nillable="true" type="ProgressBar" />
<xs:complexType name="ProgressBar">
<xs:element name="IsHorizontal" type="xs:Boolean"/>
<xs:element name="Value" type="xs:Single"/>
<xs:element name="AutoLabel" type="xs:Boolean"/>
<xs:element name="Alignment" type="xs:Alignment"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="TextColorOverride" type="xs:Color"/>
<xs:element name="TextOverride" type="xs:String"/>
<xs:element name="AutoSizeToContents" type="xs:Boolean"/>
<xs:element name="TextPadding" type="xs:Padding"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="Properties" nillable="true" type="Properties" />
<xs:complexType name="Properties">
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="PropertyRow" nillable="true" type="PropertyRow" />
<xs:complexType name="PropertyRow">
<xs:element name="IsEditing" type="xs:Boolean"/>
<xs:element name="Value" type="xs:String"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="Label" type="xs:String"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="PropertyTree" nillable="true" type="PropertyTree" />
<xs:complexType name="PropertyTree">
<xs:element name="LabelWidth" type="xs:Int32"/>
<xs:element name="VerticalScroll" type="xs:Int32"/>
<xs:element name="HorizontalScroll" type="xs:Int32"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="CanScrollH" type="xs:Boolean"/>
<xs:element name="CanScrollV" type="xs:Boolean"/>
<xs:element name="AutoSizeToContent" type="xs:Boolean"/>
<xs:element name="AutoHideBars" type="xs:Boolean"/>
<xs:element name="ViewableContentSize" type="xs:Size"/>
<xs:element name="ContentSize" type="xs:Size"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="RadioButton" nillable="true" type="RadioButton" />
<xs:complexType name="RadioButton">
<xs:element name="IsChecked" type="xs:Boolean"/>
<xs:element name="IsDepressed" type="xs:Boolean"/>
<xs:element name="IsToggle" type="xs:Boolean"/>
<xs:element name="ToggleState" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="RadioButtonGroup" nillable="true" type="RadioButtonGroup" />
<xs:complexType name="RadioButtonGroup">
<xs:element name="Selected" type="xs:LabeledRadioButton"/>
<xs:element name="SelectedName" type="xs:String"/>
<xs:element name="SelectedLabel" type="xs:String"/>
<xs:element name="SelectedIndex" type="xs:Int32"/>
<xs:element name="Horizontal" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="RenderControl" nillable="true" type="RenderControl" />
<xs:complexType name="RenderControl">
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="Resizing" nillable="true" type="Resizing" />
<xs:simpleType name="Resizing">
<xs:restriction base="xs:string">
<xs:enumeration value="None"/>
<xs:enumeration value="Width"/>
<xs:enumeration value="Height"/>
<xs:enumeration value="Both"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="ResizableControl" nillable="true" type="ResizableControl" />
<xs:complexType name="ResizableControl">
<xs:element name="Resizing" type="xs:Resizing"/>
<xs:element name="ClampMovement" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="RichLabel" nillable="true" type="RichLabel" />
<xs:complexType name="RichLabel">
<xs:element name="Document" type="xs:Document"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ScrollControl" nillable="true" type="ScrollControl" />
<xs:complexType name="ScrollControl">
<xs:element name="VerticalScroll" type="xs:Int32"/>
<xs:element name="HorizontalScroll" type="xs:Int32"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="CanScrollH" type="xs:Boolean"/>
<xs:element name="CanScrollV" type="xs:Boolean"/>
<xs:element name="AutoSizeToContent" type="xs:Boolean"/>
<xs:element name="AutoHideBars" type="xs:Boolean"/>
<xs:element name="ViewableContentSize" type="xs:Size"/>
<xs:element name="ContentSize" type="xs:Size"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="StatusBar" nillable="true" type="StatusBar" />
<xs:complexType name="StatusBar">
<xs:element name="Text" type="xs:String"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="TabControl" nillable="true" type="TabControl" />
<xs:complexType name="TabControl">
<xs:element name="AllowReorder" type="xs:Boolean"/>
<xs:element name="CurrentButton" type="xs:TabButton"/>
<xs:element name="TabStripPosition" type="xs:Dock"/>
<xs:element name="TabStrip" type="xs:TabStrip"/>
<xs:element name="TabCount" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="Table" nillable="true" type="Table" />
<xs:complexType name="Table">
<xs:element name="ColumnCount" type="xs:Int32"/>
<xs:element name="RowCount" type="xs:Int32"/>
<xs:element name="AutoSizeToContent" type="xs:Boolean"/>
<xs:element name="AlternateColor" type="xs:Boolean"/>
<xs:element name="Item" type="xs:TableRow"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="TableRow" nillable="true" type="TableRow" />
<xs:complexType name="TableRow">
<xs:element name="ColumnCount" type="xs:Int32"/>
<xs:element name="EvenRow" type="xs:Boolean"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="TextBox" nillable="true" type="TextBox" />
<xs:complexType name="TextBox">
<xs:element name="SelectAllOnFocus" type="xs:Boolean"/>
<xs:element name="HasSelection" type="xs:Boolean"/>
<xs:element name="CursorPos" type="xs:Int32"/>
<xs:element name="CursorEnd" type="xs:Int32"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="TextColorOverride" type="xs:Color"/>
<xs:element name="TextOverride" type="xs:String"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="FitToText" type="xs:String"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="TextBoxNumeric" nillable="true" type="TextBoxNumeric" />
<xs:complexType name="TextBoxNumeric">
<xs:element name="Value" type="xs:Single"/>
<xs:element name="SelectAllOnFocus" type="xs:Boolean"/>
<xs:element name="HasSelection" type="xs:Boolean"/>
<xs:element name="CursorPos" type="xs:Int32"/>
<xs:element name="CursorEnd" type="xs:Int32"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="TextColorOverride" type="xs:Color"/>
<xs:element name="TextOverride" type="xs:String"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="FitToText" type="xs:String"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="TextBoxPassword" nillable="true" type="TextBoxPassword" />
<xs:complexType name="TextBoxPassword">
<xs:element name="MaskCharacter" type="xs:Char"/>
<xs:element name="SelectAllOnFocus" type="xs:Boolean"/>
<xs:element name="HasSelection" type="xs:Boolean"/>
<xs:element name="CursorPos" type="xs:Int32"/>
<xs:element name="CursorEnd" type="xs:Int32"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="TextColorOverride" type="xs:Color"/>
<xs:element name="TextOverride" type="xs:String"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="FitToText" type="xs:String"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ToolWindow" nillable="true" type="ToolWindow" />
<xs:complexType name="ToolWindow">
<xs:element name="Vertical" type="xs:Boolean"/>
<xs:element name="IsDraggingEnabled" type="xs:Boolean"/>
<xs:element name="DeleteOnClose" type="xs:Boolean"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="StartPosition" type="xs:StartPosition"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Resizing" type="xs:Resizing"/>
<xs:element name="ClampMovement" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="TreeControl" nillable="true" type="TreeControl" />
<xs:complexType name="TreeControl">
<xs:element name="SelectedNodes" type="xs:"/>
<xs:element name="SelectedNode" type="xs:TreeNode"/>
<xs:element name="AllowMultiSelect" type="xs:Boolean"/>
<xs:element name="RootNode" type="xs:TreeNode"/>
<xs:element name="VerticalScroll" type="xs:Int32"/>
<xs:element name="HorizontalScroll" type="xs:Int32"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="CanScrollH" type="xs:Boolean"/>
<xs:element name="CanScrollV" type="xs:Boolean"/>
<xs:element name="AutoSizeToContent" type="xs:Boolean"/>
<xs:element name="AutoHideBars" type="xs:Boolean"/>
<xs:element name="ViewableContentSize" type="xs:Size"/>
<xs:element name="ContentSize" type="xs:Size"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="TreeNode" nillable="true" type="TreeNode" />
<xs:complexType name="TreeNode">
<xs:element name="TreeControl" type="xs:TreeControl"/>
<xs:element name="IsRoot" type="xs:Boolean"/>
<xs:element name="IsSelectable" type="xs:Boolean"/>
<xs:element name="NodeCount" type="xs:Int32"/>
<xs:element name="IsSelected" type="xs:Boolean"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="SelectedChildren" type="xs:"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="VerticalScrollBar" nillable="true" type="VerticalScrollBar" />
<xs:complexType name="VerticalScrollBar">
<xs:element name="BarSize" type="xs:Int32"/>
<xs:element name="BarPos" type="xs:Int32"/>
<xs:element name="ButtonSize" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="NudgeAmount" type="xs:Single"/>
<xs:element name="ScrollAmount" type="xs:Single"/>
<xs:element name="ContentSize" type="xs:Single"/>
<xs:element name="ViewableContentSize" type="xs:Single"/>
<xs:element name="IsHorizontal" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="VerticalSlider" nillable="true" type="VerticalSlider" />
<xs:complexType name="VerticalSlider">
<xs:element name="NotchCount" type="xs:Int32"/>
<xs:element name="SnapToNotches" type="xs:Boolean"/>
<xs:element name="Min" type="xs:Single"/>
<xs:element name="Max" type="xs:Single"/>
<xs:element name="Value" type="xs:Single"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="VerticalSplitter" nillable="true" type="VerticalSplitter" />
<xs:complexType name="VerticalSplitter">
<xs:element name="Value" type="xs:Single"/>
<xs:element name="IsZoomed" type="xs:Boolean"/>
<xs:element name="SplittersVisible" type="xs:Boolean"/>
<xs:element name="SplitterSize" type="xs:Int32"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="Window" nillable="true" type="Window" />
<xs:complexType name="Window">
<xs:element name="Title" type="xs:String"/>
<xs:element name="IsClosable" type="xs:Boolean"/>
<xs:element name="ModalBackground" type="xs:Color"/>
<xs:element name="Modal" type="xs:Boolean"/>
<xs:element name="IsDraggingEnabled" type="xs:Boolean"/>
<xs:element name="DeleteOnClose" type="xs:Boolean"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="StartPosition" type="xs:StartPosition"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Resizing" type="xs:Resizing"/>
<xs:element name="ClampMovement" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="Check" nillable="true" type="Check" />
<xs:complexType name="Check">
<xs:element name="Value" type="xs:String"/>
<xs:element name="IsEditing" type="xs:Boolean"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="Color" nillable="true" type="Color" />
<xs:complexType name="Color">
<xs:element name="Value" type="xs:String"/>
<xs:element name="IsEditing" type="xs:Boolean"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="PropertyBase" nillable="true" type="PropertyBase" />
<xs:complexType name="PropertyBase">
<xs:element name="Value" type="xs:String"/>
<xs:element name="IsEditing" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="Text" nillable="true" type="Text" />
<xs:complexType name="Text">
<xs:element name="Value" type="xs:String"/>
<xs:element name="IsEditing" type="xs:Boolean"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="AnchorLayout" nillable="true" type="AnchorLayout" />
<xs:complexType name="AnchorLayout">
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="DockLayout" nillable="true" type="DockLayout" />
<xs:complexType name="DockLayout">
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="FlowLayout" nillable="true" type="FlowLayout" />
<xs:complexType name="FlowLayout">
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="GridCellSizes" nillable="true" type="GridCellSizes" />
<xs:complexType name="GridCellSizes">
<xs:element name="Capacity" type="xs:Int32"/>
<xs:element name="Count" type="xs:Int32"/>
<xs:element name="Item" type="xs:Single"/>
</xs:complexType>

<xs:element name="GridLayout" nillable="true" type="GridLayout" />
<xs:complexType name="GridLayout">
<xs:element name="ColumnCount" type="xs:Int32"/>
<xs:element name="ColumnWidths" type="xs:GridCellSizes"/>
<xs:element name="RowHeights" type="xs:GridCellSizes"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="HorizontalLayout" nillable="true" type="HorizontalLayout" />
<xs:complexType name="HorizontalLayout">
<xs:element name="Horizontal" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="Splitter" nillable="true" type="Splitter" />
<xs:complexType name="Splitter">
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="StackLayout" nillable="true" type="StackLayout" />
<xs:complexType name="StackLayout">
<xs:element name="Horizontal" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="VerticalLayout" nillable="true" type="VerticalLayout" />
<xs:complexType name="VerticalLayout">
<xs:element name="Horizontal" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ButtonBase" nillable="true" type="ButtonBase" />
<xs:complexType name="ButtonBase">
<xs:element name="IsDepressed" type="xs:Boolean"/>
<xs:element name="IsToggle" type="xs:Boolean"/>
<xs:element name="ToggleState" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="CategoryButton" nillable="true" type="CategoryButton" />
<xs:complexType name="CategoryButton">
<xs:element name="Text" type="xs:String"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="TextColorOverride" type="xs:Color"/>
<xs:element name="TextPadding" type="xs:Padding"/>
<xs:element name="Alignment" type="xs:Alignment"/>
<xs:element name="ImageAlign" type="xs:ImageAlign"/>
<xs:element name="ImageName" type="xs:String"/>
<xs:element name="ImageSize" type="xs:Size"/>
<xs:element name="ImageTextureRect" type="xs:Rectangle"/>
<xs:element name="ImageColor" type="xs:Color"/>
<xs:element name="IsDepressed" type="xs:Boolean"/>
<xs:element name="IsToggle" type="xs:Boolean"/>
<xs:element name="ToggleState" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="CategoryHeaderButton" nillable="true" type="CategoryHeaderButton" />
<xs:complexType name="CategoryHeaderButton">
<xs:element name="Text" type="xs:String"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="TextColorOverride" type="xs:Color"/>
<xs:element name="TextPadding" type="xs:Padding"/>
<xs:element name="Alignment" type="xs:Alignment"/>
<xs:element name="ImageAlign" type="xs:ImageAlign"/>
<xs:element name="ImageName" type="xs:String"/>
<xs:element name="ImageSize" type="xs:Size"/>
<xs:element name="ImageTextureRect" type="xs:Rectangle"/>
<xs:element name="ImageColor" type="xs:Color"/>
<xs:element name="IsDepressed" type="xs:Boolean"/>
<xs:element name="IsToggle" type="xs:Boolean"/>
<xs:element name="ToggleState" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="CloseButton" nillable="true" type="CloseButton" />
<xs:complexType name="CloseButton">
<xs:element name="IsDepressed" type="xs:Boolean"/>
<xs:element name="IsToggle" type="xs:Boolean"/>
<xs:element name="ToggleState" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ColorButton" nillable="true" type="ColorButton" />
<xs:complexType name="ColorButton">
<xs:element name="Color" type="xs:Color"/>
<xs:element name="IsDepressed" type="xs:Boolean"/>
<xs:element name="IsToggle" type="xs:Boolean"/>
<xs:element name="ToggleState" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ColorDisplay" nillable="true" type="ColorDisplay" />
<xs:complexType name="ColorDisplay">
<xs:element name="Color" type="xs:Color"/>
<xs:element name="R" type="xs:Int32"/>
<xs:element name="G" type="xs:Int32"/>
<xs:element name="B" type="xs:Int32"/>
<xs:element name="A" type="xs:Int32"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ComboBoxBase" nillable="true" type="ComboBoxBase" />
<xs:complexType name="ComboBoxBase">
<xs:element name="SelectedIndex" type="xs:Int32"/>
<xs:element name="SelectedItem" type="xs:MenuItem"/>
<xs:element name="IsOpen" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ComboBoxButton" nillable="true" type="ComboBoxButton" />
<xs:complexType name="ComboBoxButton">
<xs:element name="IsDepressed" type="xs:Boolean"/>
<xs:element name="IsToggle" type="xs:Boolean"/>
<xs:element name="ToggleState" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ContentControl" nillable="true" type="ContentControl" />
<xs:complexType name="ContentControl">
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="DownArrow" nillable="true" type="DownArrow" />
<xs:complexType name="DownArrow">
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="Dragger" nillable="true" type="Dragger" />
<xs:complexType name="Dragger">
<xs:element name="IsHeld" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="Highlight" nillable="true" type="Highlight" />
<xs:complexType name="Highlight">
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="InnerContentControl" nillable="true" type="InnerContentControl" />
<xs:complexType name="InnerContentControl">
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="MenuDivider" nillable="true" type="MenuDivider" />
<xs:complexType name="MenuDivider">
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="Modal" nillable="true" type="Modal" />
<xs:complexType name="Modal">
<xs:element name="BackgroundColor" type="xs:Nullable`1"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="MultilineText" nillable="true" type="MultilineText" />
<xs:complexType name="MultilineText">
<xs:element name="Item" type="xs:String"/>
<xs:element name="TotalLines" type="xs:Int32"/>
<xs:element name="LineHeight" type="xs:Int32"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="PropertyRowLabel" nillable="true" type="PropertyRowLabel" />
<xs:complexType name="PropertyRowLabel">
<xs:element name="Alignment" type="xs:Alignment"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="TextColorOverride" type="xs:Color"/>
<xs:element name="TextOverride" type="xs:String"/>
<xs:element name="AutoSizeToContents" type="xs:Boolean"/>
<xs:element name="TextPadding" type="xs:Padding"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="PropertyTreeNode" nillable="true" type="PropertyTreeNode" />
<xs:complexType name="PropertyTreeNode">
<xs:element name="PropertyTree" type="xs:PropertyTree"/>
<xs:element name="Properties" type="xs:Properties"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="Resizer" nillable="true" type="Resizer" />
<xs:complexType name="Resizer">
<xs:element name="ResizeDir" type="xs:Dock"/>
<xs:element name="IsHeld" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="RightArrow" nillable="true" type="RightArrow" />
<xs:complexType name="RightArrow">
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ScrollArea" nillable="true" type="ScrollArea" />
<xs:complexType name="ScrollArea">
<xs:element name="ViewableContentSize" type="xs:Size"/>
<xs:element name="ContentSize" type="xs:Size"/>
<xs:element name="ScrollPosition" type="xs:Point"/>
<xs:element name="VerticalScroll" type="xs:Int32"/>
<xs:element name="HorizontalScroll" type="xs:Int32"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ScrollBar" nillable="true" type="ScrollBar" />
<xs:complexType name="ScrollBar">
<xs:element name="BarSize" type="xs:Int32"/>
<xs:element name="BarPos" type="xs:Int32"/>
<xs:element name="ButtonSize" type="xs:Int32"/>
<xs:element name="NudgeAmount" type="xs:Single"/>
<xs:element name="ScrollAmount" type="xs:Single"/>
<xs:element name="ContentSize" type="xs:Single"/>
<xs:element name="ViewableContentSize" type="xs:Single"/>
<xs:element name="IsHorizontal" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ScrollBarBar" nillable="true" type="ScrollBarBar" />
<xs:complexType name="ScrollBarBar">
<xs:element name="IsHorizontal" type="xs:Boolean"/>
<xs:element name="IsVertical" type="xs:Boolean"/>
<xs:element name="IsHeld" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="ScrollBarButtonDirection" nillable="true" type="ScrollBarButtonDirection" />
<xs:simpleType name="ScrollBarButtonDirection">
<xs:restriction base="xs:string">
<xs:enumeration value="Left"/>
<xs:enumeration value="Top"/>
<xs:enumeration value="Right"/>
<xs:enumeration value="Bottom"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="ScrollBarButton" nillable="true" type="ScrollBarButton" />
<xs:complexType name="ScrollBarButton">
<xs:element name="IsDepressed" type="xs:Boolean"/>
<xs:element name="IsToggle" type="xs:Boolean"/>
<xs:element name="ToggleState" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="Slider" nillable="true" type="Slider" />
<xs:complexType name="Slider">
<xs:element name="NotchCount" type="xs:Int32"/>
<xs:element name="SnapToNotches" type="xs:Boolean"/>
<xs:element name="Min" type="xs:Single"/>
<xs:element name="Max" type="xs:Single"/>
<xs:element name="Value" type="xs:Single"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="SliderBar" nillable="true" type="SliderBar" />
<xs:complexType name="SliderBar">
<xs:element name="IsHorizontal" type="xs:Boolean"/>
<xs:element name="IsHeld" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="SplitterBar" nillable="true" type="SplitterBar" />
<xs:complexType name="SplitterBar">
<xs:element name="IsHeld" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="TabButton" nillable="true" type="TabButton" />
<xs:complexType name="TabButton">
<xs:element name="IsActive" type="xs:Boolean"/>
<xs:element name="TabControl" type="xs:TabControl"/>
<xs:element name="Page" type="xs:ControlBase"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="TextColorOverride" type="xs:Color"/>
<xs:element name="TextPadding" type="xs:Padding"/>
<xs:element name="Alignment" type="xs:Alignment"/>
<xs:element name="ImageAlign" type="xs:ImageAlign"/>
<xs:element name="ImageName" type="xs:String"/>
<xs:element name="ImageSize" type="xs:Size"/>
<xs:element name="ImageTextureRect" type="xs:Rectangle"/>
<xs:element name="ImageColor" type="xs:Color"/>
<xs:element name="IsDepressed" type="xs:Boolean"/>
<xs:element name="IsToggle" type="xs:Boolean"/>
<xs:element name="ToggleState" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="TabControlInner" nillable="true" type="TabControlInner" />
<xs:complexType name="TabControlInner">
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="TabStrip" nillable="true" type="TabStrip" />
<xs:complexType name="TabStrip">
<xs:element name="AllowReorder" type="xs:Boolean"/>
<xs:element name="StripPosition" type="xs:Dock"/>
<xs:element name="Horizontal" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="TabTitleBar" nillable="true" type="TabTitleBar" />
<xs:complexType name="TabTitleBar">
<xs:element name="Alignment" type="xs:Alignment"/>
<xs:element name="Text" type="xs:String"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="TextColorOverride" type="xs:Color"/>
<xs:element name="TextOverride" type="xs:String"/>
<xs:element name="AutoSizeToContents" type="xs:Boolean"/>
<xs:element name="TextPadding" type="xs:Padding"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="Text" nillable="true" type="Text" />
<xs:complexType name="Text">
<xs:element name="Font" type="xs:Font"/>
<xs:element name="String" type="xs:String"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="AutoSizeToContents" type="xs:Boolean"/>
<xs:element name="Length" type="xs:Int32"/>
<xs:element name="TextColorOverride" type="xs:Color"/>
<xs:element name="TextOverride" type="xs:String"/>
<xs:element name="FitToText" type="xs:String"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="TreeNodeLabel" nillable="true" type="TreeNodeLabel" />
<xs:complexType name="TreeNodeLabel">
<xs:element name="Text" type="xs:String"/>
<xs:element name="Font" type="xs:Font"/>
<xs:element name="TextColor" type="xs:Color"/>
<xs:element name="TextColorOverride" type="xs:Color"/>
<xs:element name="TextPadding" type="xs:Padding"/>
<xs:element name="Alignment" type="xs:Alignment"/>
<xs:element name="ImageAlign" type="xs:ImageAlign"/>
<xs:element name="ImageName" type="xs:String"/>
<xs:element name="ImageSize" type="xs:Size"/>
<xs:element name="ImageTextureRect" type="xs:Rectangle"/>
<xs:element name="ImageColor" type="xs:Color"/>
<xs:element name="IsDepressed" type="xs:Boolean"/>
<xs:element name="IsToggle" type="xs:Boolean"/>
<xs:element name="ToggleState" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="TreeToggleButton" nillable="true" type="TreeToggleButton" />
<xs:complexType name="TreeToggleButton">
<xs:element name="IsDepressed" type="xs:Boolean"/>
<xs:element name="IsToggle" type="xs:Boolean"/>
<xs:element name="ToggleState" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="UpDownButton_Down" nillable="true" type="UpDownButton_Down" />
<xs:complexType name="UpDownButton_Down">
<xs:element name="IsDepressed" type="xs:Boolean"/>
<xs:element name="IsToggle" type="xs:Boolean"/>
<xs:element name="ToggleState" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="UpDownButton_Up" nillable="true" type="UpDownButton_Up" />
<xs:complexType name="UpDownButton_Up">
<xs:element name="IsDepressed" type="xs:Boolean"/>
<xs:element name="IsToggle" type="xs:Boolean"/>
<xs:element name="ToggleState" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="WindowBase" nillable="true" type="WindowBase" />
<xs:complexType name="WindowBase">
<xs:element name="IsDraggingEnabled" type="xs:Boolean"/>
<xs:element name="DeleteOnClose" type="xs:Boolean"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="StartPosition" type="xs:StartPosition"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Resizing" type="xs:Resizing"/>
<xs:element name="ClampMovement" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Content" type="xs:ControlBase"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="WindowTitleBar" nillable="true" type="WindowTitleBar" />
<xs:complexType name="WindowTitleBar">
<xs:element name="Title" type="xs:Label"/>
<xs:element name="CloseButton" type="xs:CloseButton"/>
<xs:element name="IsHeld" type="xs:Boolean"/>
<xs:element name="Children" type="xs:List`1"/>
<xs:element name="Parent" type="xs:ControlBase"/>
<xs:element name="Dock" type="xs:Dock"/>
<xs:element name="Skin" type="xs:SkinBase"/>
<xs:element name="ToolTip" type="xs:ControlBase"/>
<xs:element name="ToolTipText" type="xs:String"/>
<xs:element name="MeasuredSize" type="xs:Size"/>
<xs:element name="Scale" type="xs:Single"/>
<xs:element name="BaseUnit" type="xs:Int32"/>
<xs:element name="Padding" type="xs:Padding"/>
<xs:element name="Margin" type="xs:Margin"/>
<xs:element name="VerticalAlignment" type="xs:VerticalAlignment"/>
<xs:element name="HorizontalAlignment" type="xs:HorizontalAlignment"/>
<xs:element name="IsOnTop" type="xs:Boolean"/>
<xs:element name="Component" type="xs:Component"/>
<xs:element name="UserData" type="xs:Object"/>
<xs:element name="IsHovered" type="xs:Boolean"/>
<xs:element name="HasFocus" type="xs:Boolean"/>
<xs:element name="IsDisabled" type="xs:Boolean"/>
<xs:element name="IsHidden" type="xs:Boolean"/>
<xs:element name="IsCollapsed" type="xs:Boolean"/>
<xs:element name="RestrictToParent" type="xs:Boolean"/>
<xs:element name="MouseInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardInputEnabled" type="xs:Boolean"/>
<xs:element name="KeyboardNeeded" type="xs:Boolean"/>
<xs:element name="Cursor" type="xs:Cursor"/>
<xs:element name="IsTabable" type="xs:Boolean"/>
<xs:element name="ShouldDrawBackground" type="xs:Boolean"/>
<xs:element name="ShouldCacheToTexture" type="xs:Boolean"/>
<xs:element name="Name" type="xs:String"/>
<xs:element name="Bounds" type="xs:Rectangle"/>
<xs:element name="RenderBounds" type="xs:Rectangle"/>
<xs:element name="InnerBounds" type="xs:Rectangle"/>
<xs:element name="MinimumSize" type="xs:Size"/>
<xs:element name="MaximumSize" type="xs:Size"/>
<xs:element name="IsVisible" type="xs:Boolean"/>
<xs:element name="ActualLeft" type="xs:Int32"/>
<xs:element name="ActualTop" type="xs:Int32"/>
<xs:element name="ActualWidth" type="xs:Int32"/>
<xs:element name="ActualHeight" type="xs:Int32"/>
<xs:element name="ActualPosition" type="xs:Point"/>
<xs:element name="ActualSize" type="xs:Size"/>
<xs:element name="ActualRight" type="xs:Int32"/>
<xs:element name="ActualBottom" type="xs:Int32"/>
<xs:element name="Left" type="xs:Int32"/>
<xs:element name="Top" type="xs:Int32"/>
<xs:element name="Width" type="xs:Int32"/>
<xs:element name="Height" type="xs:Int32"/>
<xs:element name="Position" type="xs:Point"/>
<xs:element name="Size" type="xs:Size"/>
<xs:element name="DesiredBounds" type="xs:Rectangle"/>
<xs:element name="AnchorBounds" type="xs:Rectangle"/>
<xs:element name="Anchor" type="xs:Anchor"/>
<xs:element name="DrawDebugOutlines" type="xs:Boolean"/>
<xs:element name="PaddingOutlineColor" type="xs:Color"/>
<xs:element name="MarginOutlineColor" type="xs:Color"/>
<xs:element name="BoundsOutlineColor" type="xs:Color"/>
</xs:complexType>

<xs:element name="FileDialog" nillable="true" type="FileDialog" />
<xs:complexType name="FileDialog">
<xs:element name="InitialFolder" type="xs:String"/>
<xs:element name="CurrentItem" type="xs:String"/>
<xs:element name="Title" type="xs:String"/>
<xs:element name="Filters" type="xs:String"/>
<xs:element name="OkButtonText" type="xs:String"/>
<xs:element name="Callback" type="xs:Action`1"/>
<xs:element name="EnableNewFolder" type="xs:Boolean"/>
<xs:element name="View" type="xs:ControlBase"/>
</xs:complexType>

<xs:element name="FolderBrowserDialog" nillable="true" type="FolderBrowserDialog" />
<xs:complexType name="FolderBrowserDialog">
<xs:element name="InitialFolder" type="xs:String"/>
<xs:element name="CurrentItem" type="xs:String"/>
<xs:element name="Title" type="xs:String"/>
<xs:element name="Filters" type="xs:String"/>
<xs:element name="OkButtonText" type="xs:String"/>
<xs:element name="Callback" type="xs:Action`1"/>
<xs:element name="EnableNewFolder" type="xs:Boolean"/>
<xs:element name="View" type="xs:ControlBase"/>
</xs:complexType>

<xs:element name="OpenFileDialog" nillable="true" type="OpenFileDialog" />
<xs:complexType name="OpenFileDialog">
<xs:element name="InitialFolder" type="xs:String"/>
<xs:element name="CurrentItem" type="xs:String"/>
<xs:element name="Title" type="xs:String"/>
<xs:element name="Filters" type="xs:String"/>
<xs:element name="OkButtonText" type="xs:String"/>
<xs:element name="Callback" type="xs:Action`1"/>
<xs:element name="EnableNewFolder" type="xs:Boolean"/>
<xs:element name="View" type="xs:ControlBase"/>
</xs:complexType>

<xs:element name="SaveFileDialog" nillable="true" type="SaveFileDialog" />
<xs:complexType name="SaveFileDialog">
<xs:element name="InitialFolder" type="xs:String"/>
<xs:element name="CurrentItem" type="xs:String"/>
<xs:element name="Title" type="xs:String"/>
<xs:element name="Filters" type="xs:String"/>
<xs:element name="OkButtonText" type="xs:String"/>
<xs:element name="Callback" type="xs:Action`1"/>
<xs:element name="EnableNewFolder" type="xs:Boolean"/>
<xs:element name="View" type="xs:ControlBase"/>
</xs:complexType>

<xs:element name="Animation" nillable="true" type="Animation" />
<xs:complexType name="Animation">
<xs:element name="Finished" type="xs:Boolean"/>
</xs:complexType>

<xs:element name="TimedAnimation" nillable="true" type="TimedAnimation" />
<xs:complexType name="TimedAnimation">
<xs:element name="Finished" type="xs:Boolean"/>
</xs:complexType>

<xs:element name="Height" nillable="true" type="Height" />
<xs:complexType name="Height">
<xs:element name="Finished" type="xs:Boolean"/>
</xs:complexType>

<xs:element name="Width" nillable="true" type="Width" />
<xs:complexType name="Width">
<xs:element name="Finished" type="xs:Boolean"/>
</xs:complexType>

<xs:element name="ComponentDef" nillable="true" type="ComponentDef" />
<xs:complexType name="ComponentDef">
<xs:element name="Type" type="xs:Type"/>
<xs:element name="Data" type="xs:Object[]"/>
</xs:complexType>

<xs:element name="ElementDef" nillable="true" type="ElementDef" />
<xs:complexType name="ElementDef">
<xs:element name="Type" type="xs:Type"/>
<xs:element name="Handler" type="xs:ElementHandler"/>
</xs:complexType>

<xs:element name="_Window" nillable="true" type="_Window" />
<xs:complexType name="_Window">
</xs:complexType>

<xs:element name="_Button" nillable="true" type="_Button" />
<xs:complexType name="_Button">
</xs:complexType>

<xs:element name="_Tab" nillable="true" type="_Tab" />
<xs:complexType name="_Tab">
</xs:complexType>

<xs:element name="_Label" nillable="true" type="_Label" />
<xs:complexType name="_Label">
</xs:complexType>

<xs:element name="_TextBox" nillable="true" type="_TextBox" />
<xs:complexType name="_TextBox">
</xs:complexType>

<xs:element name="_ListBox" nillable="true" type="_ListBox" />
<xs:complexType name="_ListBox">
</xs:complexType>

<xs:element name="_Tree" nillable="true" type="_Tree" />
<xs:complexType name="_Tree">
</xs:complexType>

<xs:element name="_Properties" nillable="true" type="_Properties" />
<xs:complexType name="_Properties">
</xs:complexType>

<xs:element name="_Category" nillable="true" type="_Category" />
<xs:complexType name="_Category">
</xs:complexType>

<xs:element name="_ToolWindow" nillable="true" type="_ToolWindow" />
<xs:complexType name="_ToolWindow">
</xs:complexType>

<xs:element name="_Panel" nillable="true" type="_Panel" />
<xs:complexType name="_Panel">
</xs:complexType>

<xs:element name="_Window" nillable="true" type="_Window" />
<xs:complexType name="_Window">
</xs:complexType>

<xs:element name="_CheckBox" nillable="true" type="_CheckBox" />
<xs:complexType name="_CheckBox">
</xs:complexType>

<xs:element name="_RadioButton" nillable="true" type="_RadioButton" />
<xs:complexType name="_RadioButton">
</xs:complexType>

<xs:element name="_TextBox" nillable="true" type="_TextBox" />
<xs:complexType name="_TextBox">
</xs:complexType>

<xs:element name="_Tree" nillable="true" type="_Tree" />
<xs:complexType name="_Tree">
</xs:complexType>

<xs:element name="_ProgressBar" nillable="true" type="_ProgressBar" />
<xs:complexType name="_ProgressBar">
</xs:complexType>

<xs:element name="_Scroller" nillable="true" type="_Scroller" />
<xs:complexType name="_Scroller">
</xs:complexType>

<xs:element name="_Menu" nillable="true" type="_Menu" />
<xs:complexType name="_Menu">
</xs:complexType>

<xs:element name="_Input" nillable="true" type="_Input" />
<xs:complexType name="_Input">
</xs:complexType>

<xs:element name="_Tab" nillable="true" type="_Tab" />
<xs:complexType name="_Tab">
</xs:complexType>

<xs:element name="_CategoryList" nillable="true" type="_CategoryList" />
<xs:complexType name="_CategoryList">
</xs:complexType>

<xs:element name="Node" nillable="true" type="Node" />
<xs:complexType name="Node">
<xs:element name="IsSpace" type="xs:Boolean"/>
<xs:element name="IsLineBreak" type="xs:Boolean"/>
</xs:complexType>

<xs:element name="Candidate" nillable="true" type="Candidate" />
<xs:complexType name="Candidate">
</xs:complexType>

<xs:element name="Break" nillable="true" type="Break" />
<xs:complexType name="Break">
</xs:complexType>

<xs:element name="Sum" nillable="true" type="Sum" />
<xs:complexType name="Sum">
</xs:complexType>

<xs:element name="BreakPoint" nillable="true" type="BreakPoint" />
<xs:complexType name="BreakPoint">
</xs:complexType>

<xs:element name="UniformDictionary" nillable="true" type="UniformDictionary" />
<xs:complexType name="UniformDictionary">
<xs:element name="Item" type="xs:Int32"/>
</xs:complexType>

<xs:element name="Loader" nillable="true" type="Loader" />
<xs:complexType name="Loader">
<xs:element name="Target" type="xs:Object"/>
<xs:element name="Method" type="xs:MethodInfo"/>
</xs:complexType>

<xs:element name="Vertex" nillable="true" type="Vertex" />
<xs:complexType name="Vertex">
</xs:complexType>

<xs:element name="GuiEventHandler`1" nillable="true" type="GuiEventHandler`1" />
<xs:complexType name="GuiEventHandler`1">
<xs:element name="Target" type="xs:Object"/>
<xs:element name="Method" type="xs:MethodInfo"/>
</xs:complexType>

<xs:element name="InternalFlags" nillable="true" type="InternalFlags" />
<xs:simpleType name="InternalFlags">
<xs:restriction base="xs:string">
<xs:enumeration value="AlignHLeft"/>
<xs:enumeration value="AlignHCenter"/>
<xs:enumeration value="AlignHRight"/>
<xs:enumeration value="AlignHStretch"/>
<xs:enumeration value="AlignH_Mask"/>
<xs:enumeration value="AlignVTop"/>
<xs:enumeration value="AlignVCenter"/>
<xs:enumeration value="AlignVBottom"/>
<xs:enumeration value="AlignVStretch"/>
<xs:enumeration value="AlignV_Mask"/>
<xs:enumeration value="DockNone"/>
<xs:enumeration value="DockLeft"/>
<xs:enumeration value="DockTop"/>
<xs:enumeration value="DockRight"/>
<xs:enumeration value="DockBottom"/>
<xs:enumeration value="DockFill"/>
<xs:enumeration value="Dock_Mask"/>
<xs:enumeration value="VirtualControl"/>
<xs:enumeration value="NeedsLayout"/>
<xs:enumeration value="LayoutDone"/>
<xs:enumeration value="Disabled"/>
<xs:enumeration value="Hidden"/>
<xs:enumeration value="Collapsed"/>
<xs:enumeration value="DrawDebugOutlines"/>
<xs:enumeration value="RestrictToParent"/>
<xs:enumeration value="MouseInputEnabled"/>
<xs:enumeration value="KeyboardInputEnabled"/>
<xs:enumeration value="DrawBackground"/>
<xs:enumeration value="Tabable"/>
<xs:enumeration value="KeyboardNeeded"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="ResizerPos" nillable="true" type="ResizerPos" />
<xs:simpleType name="ResizerPos">
<xs:restriction base="xs:string">
<xs:enumeration value="Left"/>
<xs:enumeration value="LeftTop"/>
<xs:enumeration value="Top"/>
<xs:enumeration value="RightTop"/>
<xs:enumeration value="Right"/>
<xs:enumeration value="RightBottom"/>
<xs:enumeration value="Bottom"/>
<xs:enumeration value="LeftBottom"/>
</xs:restriction>
</xs:simpleType>

<xs:element name="_Inactive" nillable="true" type="_Inactive" />
<xs:complexType name="_Inactive">
</xs:complexType>

<xs:element name="_Active" nillable="true" type="_Active" />
<xs:complexType name="_Active">
</xs:complexType>

<xs:element name="_Line" nillable="true" type="_Line" />
<xs:complexType name="_Line">
</xs:complexType>

<xs:element name="_LineAlt" nillable="true" type="_LineAlt" />
<xs:complexType name="_LineAlt">
</xs:complexType>

<xs:element name="_H" nillable="true" type="_H" />
<xs:complexType name="_H">
</xs:complexType>

<xs:element name="_V" nillable="true" type="_V" />
<xs:complexType name="_V">
</xs:complexType>

<xs:element name="_Normal" nillable="true" type="_Normal" />
<xs:complexType name="_Normal">
</xs:complexType>

<xs:element name="_Inactive" nillable="true" type="_Inactive" />
<xs:complexType name="_Inactive">
</xs:complexType>

<xs:element name="_Active" nillable="true" type="_Active" />
<xs:complexType name="_Active">
</xs:complexType>

<xs:element name="_Disabled" nillable="true" type="_Disabled" />
<xs:complexType name="_Disabled">
</xs:complexType>

<xs:element name="_Active" nillable="true" type="_Active" />
<xs:complexType name="_Active">
</xs:complexType>

<xs:element name="_Disabled" nillable="true" type="_Disabled" />
<xs:complexType name="_Disabled">
</xs:complexType>

<xs:element name="_Button" nillable="true" type="_Button" />
<xs:complexType name="_Button">
</xs:complexType>

<xs:element name="_Button" nillable="true" type="_Button" />
<xs:complexType name="_Button">
</xs:complexType>

<xs:element name="_ComboBox" nillable="true" type="_ComboBox" />
<xs:complexType name="_ComboBox">
</xs:complexType>

<xs:element name="_Slider" nillable="true" type="_Slider" />
<xs:complexType name="_Slider">
</xs:complexType>

<xs:element name="_ListBox" nillable="true" type="_ListBox" />
<xs:complexType name="_ListBox">
</xs:complexType>

<xs:element name="_UpDown" nillable="true" type="_UpDown" />
<xs:complexType name="_UpDown">
</xs:complexType>

<xs:element name="_Bottom" nillable="true" type="_Bottom" />
<xs:complexType name="_Bottom">
</xs:complexType>

<xs:element name="_Top" nillable="true" type="_Top" />
<xs:complexType name="_Top">
</xs:complexType>

<xs:element name="_Left" nillable="true" type="_Left" />
<xs:complexType name="_Left">
</xs:complexType>

<xs:element name="_Right" nillable="true" type="_Right" />
<xs:complexType name="_Right">
</xs:complexType>

<xs:element name="_Inner" nillable="true" type="_Inner" />
<xs:complexType name="_Inner">
</xs:complexType>

<xs:element name="_Button" nillable="true" type="_Button" />
<xs:complexType name="_Button">
</xs:complexType>

<xs:element name="_H" nillable="true" type="_H" />
<xs:complexType name="_H">
</xs:complexType>

<xs:element name="_V" nillable="true" type="_V" />
<xs:complexType name="_V">
</xs:complexType>

<xs:element name="_Up" nillable="true" type="_Up" />
<xs:complexType name="_Up">
</xs:complexType>

<xs:element name="_Down" nillable="true" type="_Down" />
<xs:complexType name="_Down">
</xs:complexType>

</xs:schema>
